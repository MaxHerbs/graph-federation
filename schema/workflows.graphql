type Artifact {
	"""
	The file name of the artifact
	"""
	name: String!
	"""
	The download URL for the artifact
	"""
	url: Url!
	"""
	The MIME type of the artifact data
	"""
	mimeType: String!
}


"""
Implement the DateTime<Utc> scalar

The input/output is a string in RFC3339 format.
"""
scalar DateTime




"""
A scalar that can represent any JSON value.
"""
scalar JSON

"""
A scalar that can represent any JSON Object value.
"""
scalar JSONObject

"""
The root mutation of the service
"""
type Mutation {
	submitWorkflowTemplate(name: String!, visit: VisitInput!, parameters: JSON!): Workflow!
}

"""
Information about pagination in a connection
"""
type PageInfo @shareable {
	"""
	When paginating backwards, are there more items?
	"""
	hasPreviousPage: Boolean!
	"""
	When paginating forwards, are there more items?
	"""
	hasNextPage: Boolean!
	"""
	When paginating backwards, the cursor to continue.
	"""
	startCursor: String
	"""
	When paginating forwards, the cursor to continue.
	"""
	endCursor: String
}

"""
The root query of the service
"""
type Query {
	"""
	Get a single [`Workflow`] by proposal, visit, and name
	"""
	workflow(visit: VisitInput!, name: String!): Workflow!
	workflows(visit: VisitInput!, cursor: String, limit: Int, filter: WorkflowFilter): WorkflowConnection!
	workflowTemplate(name: String!): WorkflowTemplate!
	workflowTemplates(cursor: String, limit: Int, filter: WorkflowTemplatesFilter): WorkflowTemplateConnection!
}


type Task {
	"""
	Unique name of the task
	"""
	id: String!
	"""
	Display name of the task
	"""
	name: String!
	"""
	Current status of a task
	"""
	status: TaskStatus!
	"""
	Parent of a task
	"""
	depends: [String!]!
	"""
	Children of a task
	"""
	dependencies: [String!]!
	"""
	Artifacts produced by a task
	"""
	artifacts: [Artifact!]!
	"""
	Node type - Pod, DAG, etc
	"""
	stepType: String!
}

enum TaskStatus {
	PENDING
	RUNNING
	SUCCEEDED
	SKIPPED
	FAILED
	ERROR
	OMITTED
}

"""
URL is a String implementing the [URL Standard](http://url.spec.whatwg.org/)
"""
scalar Url

"""
A visit to an instrument as part of a session
"""
type Visit {
	"""
	Project Proposal Code
	"""
	proposalCode: String!
	"""
	Project Proposal Number
	"""
	proposalNumber: Int!
	"""
	Session visit Number
	"""
	number: Int!
}

"""
A visit to an instrument as part of a session
"""
input VisitInput {
	"""
	Project Proposal Code
	"""
	proposalCode: String!
	"""
	Project Proposal Number
	"""
	proposalNumber: Int!
	"""
	Session visit Number
	"""
	number: Int!
}

type Workflow {
	"""
	The name given to the workflow, unique within a given visit
	"""
	name: String!
	"""
	The visit the Workflow was run against
	"""
	visit: Visit!
	"""
	The current status of the workflow
	"""
	status: WorkflowStatus
	"""
	The top-level workflow parameters
	"""
	parameters: JSONObject
}

type WorkflowConnection @shareable {
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	A list of edges.
	"""
	edges: [WorkflowEdge!]!
	"""
	A list of nodes.
	"""
	nodes: [Workflow!]!
}

"""
An edge in a connection.
"""
type WorkflowEdge @shareable {
	"""
	The item at the end of the edge
	"""
	node: Workflow!
	"""
	A cursor for use in pagination
	"""
	cursor: String!
}

"""
All tasks in the workflow have errored
"""
type WorkflowErroredStatus {
	"""
	Time at which this workflow started
	"""
	startTime: DateTime!
	"""
	Time at which this workflow completed
	"""
	endTime: DateTime!
	"""
	A human readable message indicating details about why the workflow is in this condition
	"""
	message: String
	"""
	Tasks created by the workflow
	"""
	tasks: [Task!]!
}

"""
All tasks in the workflow have failed
"""
type WorkflowFailedStatus {
	"""
	Time at which this workflow started
	"""
	startTime: DateTime!
	"""
	Time at which this workflow completed
	"""
	endTime: DateTime!
	"""
	A human readable message indicating details about why the workflow is in this condition
	"""
	message: String
	"""
	Tasks created by the workflow
	"""
	tasks: [Task!]!
}

"""
All the supported Workflows filters
"""
input WorkflowFilter {
	"""
	The status field for a workflow
	"""
	workflowStatusFilter: WorkflowStatusFilter
	"""
	The creator of the workflow
	"""
	creator: String
}

type WorkflowPendingStatus {
	"""
	A human readable message indicating details about why the workflow is in this condition
	"""
	message: String
}

type WorkflowRunningStatus {
	"""
	Time at which this workflow started
	"""
	startTime: DateTime!
	"""
	A human readable message indicating details about why the workflow is in this condition
	"""
	message: String
	"""
	Tasks created by the workflow
	"""
	tasks: [Task!]!
}

"""
The status of a workflow
"""
union WorkflowStatus = WorkflowPendingStatus | WorkflowRunningStatus | WorkflowSucceededStatus | WorkflowFailedStatus | WorkflowErroredStatus

"""
Represents workflow status filters
"""
input WorkflowStatusFilter {
	pending: Boolean! = false
	running: Boolean! = false
	succeeded: Boolean! = false
	failed: Boolean! = false
	error: Boolean! = false
}

"""
All tasks in the workflow have succeded
"""
type WorkflowSucceededStatus {
	"""
	Time at which this workflow started
	"""
	startTime: DateTime!
	"""
	Time at which this workflow completed
	"""
	endTime: DateTime!
	"""
	A human readable message indicating details about why the workflow is in this condition
	"""
	message: String
	"""
	Tasks created by the workflow
	"""
	tasks: [Task!]!
}

type WorkflowTemplate {
	"""
	The name given to the workflow template, globally unique
	"""
	name: String!
	"""
	The group who maintains the workflow template
	"""
	maintainer: String!
	"""
	A human readable title for the workflow template
	"""
	title: String
	"""
	A human readable description of the workflow which is created
	"""
	description: String
	"""
	A JSON Schema describing the arguments of a Workflow Template
	"""
	arguments: JSON!
	"""
	A JSON Forms UI Schema describing how to render the arguments of the Workflow Template
	"""
	uiSchema: JSON
}

type WorkflowTemplateConnection @shareable {
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	A list of edges.
	"""
	edges: [WorkflowTemplateEdge!]!
	"""
	A list of nodes.
	"""
	nodes: [WorkflowTemplate!]!
}

"""
An edge in a connection.
"""
type WorkflowTemplateEdge @shareable {
	"""
	The item at the end of the edge
	"""
	node: WorkflowTemplate!
	"""
	A cursor for use in pagination
	"""
	cursor: String!
}

"""
Supported label filters for ClusterWorkflowTemplates
"""
input WorkflowTemplatesFilter {
	"""
	The science group owning the template eg imaging
	"""
	scienceGroup: String
}

directive @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @specifiedBy(url: String!) on SCALAR
extend schema @link(
	url: "https://specs.apollo.dev/federation/v2.3",
	import: ["@key", "@tag", "@shareable", "@inaccessible", "@override", "@external", "@provides", "@requires", "@composeDirective", "@interfaceObject"]
)
